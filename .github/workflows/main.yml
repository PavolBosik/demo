name: CI

on:
  # Trigger this workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Server:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:6.0-jammy-amd64
    steps:
      # Check-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Build Server and execute Unit Tests
        run: |
          cd src/server
          dotnet test --logger:trx

      # A workaround to prevent the next step from failing due to git detecting dubious ownership in workspace root
      # (see https://github.com/webispy/checkpatch-action/issues/16#issuecomment-1196353910)
      - name: Disable git safe repository checks
        run: git config --global --add safe.directory "*"

      - name: Create Unit Tests Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if the previous step failed
        with:
          name: Server Unit Tests              # Name of the check run which will be created
          working-directory: src/server
          path: '*/TestResults/*.trx'   # Path to test results
          reporter: dotnet-trx          # Format of test results
      
      - name: Dotnet run
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0' # SDK Version to use; x will use the latest version of the 3.1 channel
          
      - name: Publish 
        run: cd src/server/Demo.Web; dotnet restore; dotnet publish -r linux-x64 --configuration "Release" --self-contained "true" -o ../output;
        
      - name: Generate deployment package 
        run: cd src/server/output; zip ../Demo.Web.zip *;
        
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: AKIA6K7Z5I6DSLJLEEA7    # move to environment secrets ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: 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        # move to environment secrets ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: Demo
          environment_name: Demo-env
          version_label: ${{ github.run_id }}
          region: us-west-2
          deployment_package: Demo.Web.zip

  Client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Starting NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: |
          cd src/client
          npm install
      - name: build project
        run: |
          cd src/client
          npm run build
      - name: unit tests
        run: |
          cd src/client
          npm run test:unit
      - name: lint
        run: |
          cd src/client
          npm run lint
      - name: Test Reports
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Client Unit Tests
          working-directory: src/client
          path: reports/jest-*.xml
          reporter: jest-junit
